<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <!--加载shiro的自定义配置文件-->
    <context:property-placeholder order="10" ignore-unresolvable="true" location="classpath:shiro.properties"/>

    <!--默认SimpleCredentialsMatcher-->
    <bean id="userAuthorizingRealm" class="com.sanweibook.lingdu.shiro.realm.UserAuthorizingRealm">
        <property name="credentialsMatcher" ref="userCredentialsMatcher"/>
        <property name="cacheManager" ref="cacheManager"/>
        <property name="cachingEnabled" value="true"/>
        <property name="authenticationCachingEnabled" value="true"/>
        <property name="authorizationCachingEnabled" value="true"/>
    </bean>

    <bean id="userCredentialsMatcher" class="com.sanweibook.lingdu.shiro.web.filter.authc.UserCredentialsMatcher">
        <property name="hashAlgorithmName" value="md5"/>
        <property name="hashIterations" value="2"/>
    </bean>


    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realms">
            <list><ref bean="userAuthorizingRealm"></ref></list>
        </property>
        <property name="sessionManager" ref="sessionManager"/>
        <property name="cacheManager" ref="cacheManager"/>
    </bean>

    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean id="securityUtilFactory" class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>

    <!-- 基于Form表单的身份验证过滤器
    <bean id="formAuthenticationFilter" class="com.sanweibook.lingdu.shiro.web.filter.authc.MyFormAuthenticationFilter">
        <property name="loginUrl" value="/sysUser/login"/>
        <property name="passwordParam" value="password"/>
        <property name="usernameParam" value="username"/>
    </bean> -->

    <!-- 配置用户注销时的URL跳转
    <bean id="logout" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/sysUser/logout"/>
    </bean>-->


    <!--配置shiroFilter过滤器，-->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!--配置权限管理器-->
        <property name="securityManager" ref="securityManager"/>
        <!--配置登录请求URL-->
        <property name="loginUrl" value="/admin/login.html"/>
        <!--配置登录成功后请求URL-->
        <property name="successUrl" value="/admin/home.html"/>
        <!--配置请求不在权限范围内的跳转请求URL-->
        <property name="unauthorizedUrl" value="/403"/>
        <!--可以配置自定义的过滤器，
        public enum DefaultFilter {
            anon(AnonymousFilter.class),
            authc(FormAuthenticationFilter.class),
            authcBasic(BasicHttpAuthenticationFilter.class),
            logout(LogoutFilter.class),
            noSessionCreation(NoSessionCreationFilter.class),
            perms(PermissionsAuthorizationFilter.class),
            port(PortFilter.class),
            rest(HttpMethodPermissionFilter.class),
            roles(RolesAuthorizationFilter.class),
            ssl(SslFilter.class),
            user(UserFilter.class);
        }   -->
        <!--<property name="filters">
            <map>
                <entry key="authc" value-ref="formAuthenticationFilter"/>
            </map>
        </property>-->
        <!--权限配置-->
        <property name="filterChainDefinitions">
            <value>
                <!--静态资源不需要权限认证-->
                /resources/**=anon
                /logout=logout
                /admin/home.html=authc,roles[admin]
                /**=authc
            </value>
        </property>

    </bean>


    <bean id="cacheManager" class="com.sanweibook.lingdu.shiro.cache.RedisCacheManager">
        <property name="redisClientTemplate" ref="redisClientTemplate"/>
    </bean>

    <!--session管理，如果使用redis，这个要配上，不然redis的键值是乱码-->
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">
        <property name="sessionDAO" ref="redisSessionDAO"/>
    </bean>

    <bean id="redisSessionDAO" class="com.sanweibook.lingdu.shiro.session.redisSessionDAO">
        <property name="redisClientTemplate" ref="redisClientTemplate"/>
        <!--设置shiro的session过期时间
        <property name="sessionTomeOut" value="${shiro.sessionTimeOut}"/>-->
    </bean>

    <!--用户认证、权限信息清除工具-->
    <bean id="userAuthorizingRealmUtil" class="com.sanweibook.lingdu.shiro.util.UserAuthorizingRealmUtil">
        <property name="realm" ref="userAuthorizingRealm"/>
    </bean>

    <!-- shiro生命周期处理器-->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"></bean>



</beans>